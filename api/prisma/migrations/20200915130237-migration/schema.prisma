datasource DS {
  // optionally set multiple providers
  // example: provider = ["sqlite", "postgresql"]
  provider = "postgresql"
  url = "***"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

enum DocumentType {
  ARTICLE
  TWEET
}

model Entry {
  id           String       @id @default(cuid())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  uid          String       @unique
  documentType DocumentType @default(TWEET)
  document     Json
  tweet        Tweet?
  article      Article?
}

model Article {
  id             String         @id @default(cuid())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now())
  publishedAt    DateTime
  entry          Entry          @relation(fields: [entryId], references: [id])
  entryId        String
  author         String
  title          String
  url            String         @unique
  ArticleContext ArticleContext
}

model ArticleContext {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String
  content   Json
}

model Tweet {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  publishedAt   DateTime
  entry         Entry           @relation(fields: [entryId], references: [id])
  entryId       String
  author        String
  title         String
  content       String
  url           String          @unique
  TweetContext  TweetContext?
  TweetCategory TweetCategory[]
}

model TweetCategory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String
  uid       String
  label     String
}

model TweetContext {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String
  content   Json
}
